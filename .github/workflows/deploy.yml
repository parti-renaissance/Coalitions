# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/GoogleCloudPlatform/github-actions/tree/master/example-workflows/gke

name: Build and Deploy to GKE

on:
  push:
    branches: [master]
  release:
    types: [published]

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.ACOUNT_SERVICE }}
          export_default_credentials: true

      # Configure Docker to use the gcloud command-line tool as a credential
      - run: gcloud --quiet auth configure-docker

      - name: Get github ref name
        id: ref_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}

      # Build the Docker image
      - name: Build & push Docker image
        env:
          REGISTRY: eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}
          IMAGE: coalitions
          SOURCE_NAME: ${{ steps.ref_name.outputs.SOURCE_NAME }}
          REACT_APP_ENV: "${{ steps.ref_name.outputs.SOURCE_NAME == 'master' && 'preprod' || 'production' }}"
        run: |-
          docker build \
            --file ./docker/nodeserver/Dockerfile \
            --tag ${REGISTRY}/${IMAGE}:${SOURCE_NAME}-${GITHUB_SHA} \
            --build-arg REACT_APP_ENV=${REACT_APP_ENV} \
            .

          docker push -- ${REGISTRY}/${IMAGE}:${SOURCE_NAME}-${GITHUB_SHA}
